pipeline {
    agent any
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    stages {
        stage('Extract Tag Info') {
            steps {
                script {
                    // Debug info
                    echo "JENKINS_URL: ${env.JENKINS_URL}"
                    echo "BUILD_URL: ${env.BUILD_URL}"
                    echo "JOB_NAME: ${env.JOB_NAME}"
                    echo "BUILD_TAG: ${env.BUILD_TAG}"
                    
                    // Add git command to show the current state
                    sh "git branch -a"
                    sh "git tag -l"
                    
                    // Get the commit we're building
                    def gitCommit = sh(script: "git rev-parse HEAD", returnStdout: true).trim()
                    echo "Current commit: ${gitCommit}"
                    
                    // Find tags pointing to this commit
                    def allTags = sh(script: "git tag --points-at ${gitCommit}", returnStdout: true).trim()
                    echo "All tags on this commit: ${allTags}"
                    
                    // Now check if any of the tags start with 'develop-'
                    def hasDevTag = false
                    def developTag = ""
                    
                    allTags.split('\n').each { tag ->
                        if (tag.startsWith('develop-')) {
                            hasDevTag = true
                            developTag = tag
                        }
                    }
                    
                    // If no develop tag was found, abort
                    if (!hasDevTag) {
                        currentBuild.result = 'ABORTED'
                        error "This pipeline only runs for 'develop-*' tags. No such tag found on the current commit."
                    }
                    
                    // Store the tag for later use
                    env.GIT_TAG = developTag
                    echo "Valid develop tag found: ${env.GIT_TAG}"
                }
            }
        }

        stage('Info') {
            steps {
                echo "Estamos construyendo el tag: ${env.GIT_TAG}"
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo "Desplegando un tag de desarrollo: ${env.GIT_TAG}"
                    // Aqu√≠ pones tus pasos para 'develop-'
                }
            }
        }
    }

    post {
        aborted {
            echo "Build aborted: This pipeline only runs for 'develop-*' tags."
        }
        failure {
            echo "Build failed! Check the logs for more information."
        }
        success {
            echo "Build completed successfully!"
        }
    }
}